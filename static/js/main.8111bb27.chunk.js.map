{"version":3,"sources":["icons/icons.module.css","icons sync /^/.*/.svg$","icons/bug.svg","icons/dark.svg","icons/dragon.svg","icons/electric.svg","icons/fairy.svg","icons/fighting.svg","icons/fire.svg","icons/flying.svg","icons/ghost.svg","icons/grass.svg","icons/ground.svg","icons/ice.svg","icons/normal.svg","icons/poison.svg","icons/psychic.svg","icons/rock.svg","icons/steel.svg","icons/water.svg","PokeCard/DamageRelation.jsx","PokeCard/PokeTypeList.jsx","PokeCard/TypeIndicator.jsx","PokeCard.jsx","GymBox/GymBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","icon","damageRelation","error","bug","dark","dragon","electric","fire","fairy","fighting","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","map","./bug.svg","./dark.svg","./dragon.svg","./electric.svg","./fairy.svg","./fighting.svg","./fire.svg","./flying.svg","./ghost.svg","./grass.svg","./ground.svg","./ice.svg","./normal.svg","./poison.svg","./psychic.svg","./rock.svg","./steel.svg","./water.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","p","DamageRelation","_ref","title","icons","react_default","a","createElement","Fragment","className","iconStyle","style","height","PokeTypeList","PokeType","_useState","useState","_useState2","slicedToArray","doubleDamageTo","setDoubleDamageTo","_useState3","_useState4","doubleDamageFrom","setDoubleDamageFrom","_useState5","_useState6","halfDamageTo","setHalfDamageTo","_useState7","_useState8","halfDamageFrom","setHalfDamageFrom","_useState9","_useState10","setNoDamageTo","_useState11","_useState12","setNoDamageFrom","mapITypeToName","iType","x","name","getIcons","fromArr","concat","src","require","alt","useEffect","forEach","uniqueType","PokeAPI","Type","fetch","then","result","damage_relations","newDoubleDamageFrom","toConsumableArray","Set","double_damage_from","newDoubleDamageTo","double_damage_to","newHalfDamageTo","half_damage_to","newHalfDamageFrom","half_damage_from","newNoDamageFrom","no_damage_from","newNoDamageTo","no_damage_to","filter","item","includes","TypeIndicator","typeList","position","top","left","PokeCard","pokemon","removePokemon","nameRef","useRef","pname","setName","types","setTypes","pokemonSprite","setPokemonSprite","Pokemon","mappedTypes","type","console","log","Card","iconStyles","CloseButton","right","onClick","Img","backgroundColor","variant","Body","Title","ref","toUpperCase","slice","GymBox","Col","md","Text","App","pokeRef","uuidv4","pokemonList","setPokemonList","newPokemonList","handleAddPoke","current","value","toLowerCase","names","split","combine","n","strName","trim","push","prevPokemonList","loadedList","JSON","parse","localStorage","getItem","storeableList","stringify","setItem","Container","fluid","Row","Stack","direction","gap","Form","Control","onKeyDown","keyCode","ctrlKey","prevList","handleRemovePoke","placeholder","Button","xxs","lg","xl","key","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.8111bb27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"icons_icon__f2HC0\",\"damageRelation\":\"icons_damageRelation__dgrj0\",\"error\":\"icons_error__12V_V\",\"bug\":\"icons_bug__jJAtw\",\"dark\":\"icons_dark__3swOX\",\"dragon\":\"icons_dragon__jsI8Q\",\"electric\":\"icons_electric__N8Mb7\",\"fire\":\"icons_fire__tKTIF\",\"fairy\":\"icons_fairy__2GyW1\",\"fighting\":\"icons_fighting__vSAa5\",\"flying\":\"icons_flying__3xO1w\",\"ghost\":\"icons_ghost__3xTSl\",\"grass\":\"icons_grass__3vD5j\",\"ground\":\"icons_ground__24rCr\",\"ice\":\"icons_ice__12Ggr\",\"normal\":\"icons_normal__3zUt8\",\"poison\":\"icons_poison__2jlNU\",\"psychic\":\"icons_psychic__23LmY\",\"rock\":\"icons_rock__2FB9-\",\"steel\":\"icons_steel__XF8sv\",\"water\":\"icons_water__234U8\"};","var map = {\n\t\"./bug.svg\": 62,\n\t\"./dark.svg\": 63,\n\t\"./dragon.svg\": 64,\n\t\"./electric.svg\": 65,\n\t\"./fairy.svg\": 66,\n\t\"./fighting.svg\": 67,\n\t\"./fire.svg\": 68,\n\t\"./flying.svg\": 69,\n\t\"./ghost.svg\": 70,\n\t\"./grass.svg\": 71,\n\t\"./ground.svg\": 72,\n\t\"./ice.svg\": 73,\n\t\"./normal.svg\": 74,\n\t\"./poison.svg\": 75,\n\t\"./psychic.svg\": 76,\n\t\"./rock.svg\": 77,\n\t\"./steel.svg\": 78,\n\t\"./water.svg\": 79\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;","module.exports = __webpack_public_path__ + \"static/media/bug.14540979.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark.b7d4f578.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragon.18a1dbc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/electric.68b142da.svg\";","module.exports = __webpack_public_path__ + \"static/media/fairy.603e08d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/fighting.8ce4fa81.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.33d14b30.svg\";","module.exports = __webpack_public_path__ + \"static/media/flying.8c1e094f.svg\";","module.exports = __webpack_public_path__ + \"static/media/ghost.ff397345.svg\";","module.exports = __webpack_public_path__ + \"static/media/grass.d589dd00.svg\";","module.exports = __webpack_public_path__ + \"static/media/ground.289c4927.svg\";","module.exports = __webpack_public_path__ + \"static/media/ice.f82b7e5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/normal.8f2a7aaa.svg\";","module.exports = __webpack_public_path__ + \"static/media/poison.183135e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/psychic.60982f05.svg\";","module.exports = __webpack_public_path__ + \"static/media/rock.499a0fa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/steel.95342da3.svg\";","module.exports = __webpack_public_path__ + \"static/media/water.e29fb8e3.svg\";","import React from \"react\";\r\nimport iconStyle from \"../icons/icons.module.css\";\r\n\r\nexport default function DamageRelation({ title, icons }) {\r\n  return (\r\n    <>\r\n      <p className={iconStyle.damageRelation}>{title}</p>\r\n      <div style={{ height: \"32px\" }}>{icons}</div>\r\n    </>\r\n  );\r\n}\r\n","import PokeAPI from \"pokeapi-typescript\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport iconStyle from \"../icons/icons.module.css\";\r\nimport DamageRelation from \"./DamageRelation\";\r\n\r\nexport default function PokeTypeList({ PokeType }) {\r\n  const [doubleDamageTo, setDoubleDamageTo] = useState([]);\r\n  const [doubleDamageFrom, setDoubleDamageFrom] = useState([]);\r\n  const [halfDamageTo, setHalfDamageTo] = useState([]);\r\n  const [halfDamageFrom, setHalfDamageFrom] = useState([]);\r\n  const [noDamageTo, setNoDamageTo] = useState([]);\r\n  const [noDamageFrom, setNoDamageFrom] = useState([]);\r\n\r\n  function uniqueTypes(prev, arrIn) {\r\n    return [...new Set([...prev, ...arrIn])];\r\n  }\r\n\r\n  function mapITypeToName(iType) {\r\n    return iType.map((x) => x.name);\r\n  }\r\n\r\n  function getIcons(fromArr) {\r\n    return fromArr.map((x) => {\r\n      return (\r\n        <div className={`${iconStyle[x]} ${iconStyle.icon}`}>\r\n          <img src={require(\"../icons/\" + x + \".svg\")} title={x} alt=\"\" />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (PokeType === \"\") return;\r\n    PokeType.forEach((uniqueType) => {\r\n      PokeAPI.Type.fetch(uniqueType).then((result) => {\r\n        const { damage_relations } = result;\r\n        const newDoubleDamageFrom = [\r\n          ...new Set([\r\n            ...mapITypeToName(damage_relations.double_damage_from),\r\n            ...doubleDamageFrom,\r\n          ]),\r\n        ];\r\n        const newDoubleDamageTo = [\r\n          ...new Set([\r\n            ...mapITypeToName(damage_relations.double_damage_to),\r\n            ...doubleDamageTo,\r\n          ]),\r\n        ];\r\n        const newHalfDamageTo = [\r\n          ...new Set([\r\n            ...mapITypeToName(damage_relations.half_damage_to),\r\n            ...halfDamageTo,\r\n          ]),\r\n        ];\r\n        const newHalfDamageFrom = [\r\n          ...new Set([\r\n            ...mapITypeToName(damage_relations.half_damage_from),\r\n            ...halfDamageFrom,\r\n          ]),\r\n        ];\r\n        const newNoDamageFrom = mapITypeToName(damage_relations.no_damage_from);\r\n        const newNoDamageTo = mapITypeToName(damage_relations.no_damage_to);\r\n\r\n        setDoubleDamageFrom(\r\n          newDoubleDamageFrom.filter(\r\n            (item) => !newHalfDamageFrom.includes(item)\r\n          )\r\n        );\r\n        setDoubleDamageTo(\r\n          newDoubleDamageTo.filter((item) => !newHalfDamageTo.includes(item))\r\n        );\r\n        setHalfDamageFrom(\r\n          newHalfDamageFrom.filter(\r\n            (item) => !newDoubleDamageFrom.includes(item)\r\n          )\r\n        );\r\n        setHalfDamageTo(\r\n          newHalfDamageTo.filter((item) => !newDoubleDamageTo.includes(item))\r\n        );\r\n        setNoDamageFrom(newNoDamageFrom);\r\n        setNoDamageTo(newNoDamageTo);\r\n      });\r\n    });\r\n  }, [PokeType]);\r\n\r\n  return (\r\n    <div>\r\n      <DamageRelation\r\n        title=\"2x Damage From\"\r\n        icons={getIcons(doubleDamageFrom)}\r\n      />\r\n      <DamageRelation\r\n        title=\"1/2 Damage From\"\r\n        icons={getIcons(halfDamageFrom)}\r\n      />\r\n      {/* <DamageRelation title=\"Invincible to\" icons={getIcons(noDamageFrom)} /> */}\r\n      <DamageRelation title=\"2X Damage To\" icons={getIcons(doubleDamageTo)} />\r\n      <DamageRelation title=\"1/2 Damage to\" icons={getIcons(halfDamageTo)} />\r\n      {/* <DamageRelation title=\"Doesn't Damage\" icons={getIcons(noDamageTo)} /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport iconStyle from \"../icons/icons.module.css\";\r\nexport default function TypeIndicator({ typeList }) {\r\n  function getIcons(fromArr) {\r\n    return fromArr.map((x) => {\r\n      return (\r\n        <div className={`${iconStyle[x]} ${iconStyle.icon}`}>\r\n          <img src={require(\"../icons/\" + x + \".svg\")} title={x} alt=\"\" />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div style={{ position: \"absolute\", top: \"160px\", left: \"10px\" }}>\r\n      {getIcons(typeList)}\r\n    </div>\r\n  );\r\n}\r\n","import PokeAPI from \"pokeapi-typescript\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport PokeTypeList from \"./PokeCard/PokeTypeList\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CloseButton from \"react-bootstrap/CloseButton\";\r\nimport TypeIndicator from \"./PokeCard/TypeIndicator\";\r\nimport iconStyles from \"./icons/icons.module.css\";\r\n\r\nexport default function PokeCard({ pokemon, removePokemon }) {\r\n  const nameRef = useRef();\r\n  const [pname, setName] = useState(\"...\");\r\n  const [types, setTypes] = useState([]);\r\n  const [pokemonSprite, setPokemonSprite] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    PokeAPI.Pokemon.resolve(pokemon.name).then(\r\n      (result) => {\r\n        const mappedTypes = result.types.map((x) => x.type.name);\r\n        setPokemonSprite(\r\n          `https://unpkg.com/pokeapi-sprites@2.0.4/sprites/pokemon/other/dream-world/${result.id}.svg`\r\n        );\r\n        setName(result.name);\r\n        setTypes(mappedTypes);\r\n      },\r\n      (result) => {\r\n        console.log(result);\r\n        setPokemonSprite(\r\n          \"https://unpkg.com/pokeapi-sprites@2.0.4/sprites/pokemon/other/dream-world/201-question.svg\"\r\n        );\r\n        setName(`missing ${pokemon.name}`);\r\n      }\r\n    );\r\n  }, []);\r\n  function handleRemove(e) {\r\n    removePokemon(pokemon.id);\r\n  }\r\n  return (\r\n    <Card className={iconStyles[types[0]]}>\r\n      <CloseButton\r\n        style={{ position: \"absolute\", top: \"6px\", right: \"6px\" }}\r\n        onClick={handleRemove}\r\n      />\r\n      <Card.Img\r\n        style={{\r\n          backgroundColor: \"rgba(255, 255, 255, 0.66)\",\r\n          height: \"200px\",\r\n        }}\r\n        variant=\"top\"\r\n        src={pokemonSprite}\r\n      />\r\n      <TypeIndicator typeList={types} />\r\n      <Card.Body>\r\n        <Card.Title ref={nameRef}>\r\n          {pname[0].toUpperCase() + pname.slice(1)}\r\n        </Card.Title>\r\n        <PokeTypeList PokeType={types} />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nexport default function GymBox() {\r\n  return (\r\n    <Col md={4}>\r\n      <Card>\r\n        <Card.Title>Gym Info</Card.Title>\r\n        <Card.Text>Weaknesses</Card.Text>\r\n        <Card.Text>Strengths</Card.Text>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PokeCard from \"./PokeCard.jsx\"\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Stack from 'react-bootstrap/Stack'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Form } from 'react-bootstrap';\nimport GymBox from './GymBox/GymBox.jsx'\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"pgodex.local\"\n  const pokeRef = useRef();\n  const [pokemonList, setPokemonList] = useState([{ name: \"rhyperior\", id: uuidv4() }])\n\n  useEffect(() => {\n    const loadedList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (!loadedList) return;\n    setPokemonList(loadedList);\n  }, [])\n\n  useEffect(() => {\n    const storeableList = JSON.stringify(pokemonList);\n    localStorage.setItem(LOCAL_STORAGE_KEY, storeableList);\n  }, [pokemonList])\n\n  function removePokemon(id) {\n    const newPokemonList = pokemonList.filter(item => item.id != id)\n    setPokemonList(newPokemonList);\n  }\n  function handleAddPoke(e) {\n    const name = pokeRef.current.value.toLowerCase()\n    if (name === '') return\n    pokeRef.current.value = null\n    if (name.includes(\",\")) {\n      let names = name.split(\",\")\n      let combine = []\n      for (let n in names) {\n        let strName = names[n].trim();\n        combine.push({ id: uuidv4(), name: strName })\n      }\n      setPokemonList(prevPokemonList => {\n        return [...prevPokemonList, ...combine]\n      })\n      return;\n    }\n    setPokemonList(prevPokemonList => {\n      return [...prevPokemonList, { id: uuidv4(), name: name }]\n    })\n  }\n\n  function handleRemovePoke() {\n    const name = pokeRef.current.value;\n    if (name === '') {\n      setPokemonList([]);\n      return;\n    };\n    setPokemonList(prevList => {\n      return prevList.filter(item => item.name.toLowerCase() != name.toLowerCase())\n    })\n    pokeRef.current.value = null;\n  }\n\n  function handleAddKeyDown(e) {\n    if (e.keyCode === 13 && e.ctrlKey) {\n      handleRemovePoke();\n      return;\n    }\n    if (e.keyCode === 13) { // Enter/Return pressed\n      handleAddPoke(null)\n    }\n  }\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col md={3}>\n            <Stack direction=\"horizontal\" gap={3}>\n              <Form.Control ref={pokeRef} onKeyDown={handleAddKeyDown} className=\"me-auto\" placeholder=\"Pikachu...\" />\n              <Button onClick={handleAddPoke}>Add</Button>\n            </Stack>\n          </Col>\n          <Col md={2}>\n            <Card>\n              <Card.Title>Basic Info\n              </Card.Title>\n              <Card.Text>\n                <strong>8:20 -</strong> time to get 50 coins in a gym<br />\n                <strong>Meta:</strong> Some pokemon will have attacks that don't match their types. They may be strong against their weakness. <em>beware</em>\n              </Card.Text>\n            </Card>\n          </Col>\n          <GymBox />\n          <Col md={3}>\n            <Card>\n              <Card.Title>New Features</Card.Title>\n              <Card.Text><strong><kbd>Ctrl</kbd>+<kbd>Enter</kbd></strong> will remove all pokemon with a given name<br />\n                Comma seperating pokemon <em>Pikachu, Mew</em> will add each pokemon in the list.\n              </Card.Text>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <Row>\n          {pokemonList.map(x => {\n            return <Col xxs={12} md={6} lg={3} xl={2}>\n              <PokeCard pokemon={x} key={x.id} removePokemon={removePokemon} />\n            </Col>\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}